/*!
* mTip JavaScript Custom Tooltip Plugin v 0.0.1
* Author: Manish Kumar
* Email: manishjanky@gmail.com
* https://manishjanky.github.io/#/mtip
*
* Copyright (c) 2017 Manish Kumar
* Released under the MIT license
* https://opensource.org/licenses/MIT
*
* Date: 2017-03-16
*/
var mTip = function (t) { document.onclick = function () { for (var t = document.getElementsByClassName("mtip") ; t[0];) t[0].parentNode.removeChild(t[0]) }; var e = "rgb(158, 226, 235)", o = "grey", i = 250, r = "hover", n = "bottom", l = 1, a = "[data-mtip]"; "undefined" != typeof t && (a = t.selector ? t.selector : a, e = t.bColor ? t.bColor : e, o = t.color ? t.color : o, i = t.delay ? t.delay : i, r = t.trigger ? t.trigger : r, n = t.position ? t.position : n, l = t.opacity ? t.opacity : l); for (var s = document.querySelectorAll(a), p = 0; p < s.length; p++) { var d = s[p]; d.removeAttribute("title"); var c = document.createElement("div"); c.classList.add("mtip"), c.style.background = e, c.style.width = "150px", c.style.height = "auto", c.style.lineHeight = "normal", c.style.padding = "5px", c.style.color = o, c.style.position = "absolute", c.style.opacity = l, c.style.borderRadius = "5px", c.style.minWidth = "150px", c.style.Width = "150px", c.style.textAlign = "center", c.style.fontSize = "15px", c.style.zIndex = 9999, c.style.wordWrap = "break-word", c.style.whiteSpace = "normal", c.style.border = "none", c.style.visibility = "hidden", c.style.textTransform = "none"; var m = function (t, o, r) { if (tooltipText = t.getAttribute("data-mtip"), "undefined" == typeof tooltipText || null == tooltipText || "" == tooltipText) return t.removeChild(r), !1; ("" == t.style.position || null == t.style.position || "undefined" == typeof t.style.position) && (document.styleSheets[0].addRule(".mTipParent", " position:relative;overflow:visible !important;"), t.classList.add("mTipParent")), r.innerText = tooltipText, null == r.parentElement && t.appendChild(r); var l = t.getBoundingClientRect(), a = r.getBoundingClientRect(); o.clientX, o.clientY; "top" == n ? (r.style.left = o.clientX + window.pageXOffset - l.left - a.width / 2 + "px", r.style.top = o.clientY - l.top - a.height - 20 + "px", document.styleSheets[0].addRule(".mtip:before", "content:'';display:inline-block;border:10px solid transparent; border-left-color: " + e + ";-webkit-transform: rotate(90deg);-moz-transform: rotate(90deg);-o-transform: rotate(90deg);-ms-transform: rotate(90deg);-o-transform: rotate(90deg);position:absolute;left:" + (a.width / 2 - 10) + "px;top:" + a.height + "px;")) : "bottom" == n ? (r.style.left = o.clientX - l.left - a.width / 2 + "px", r.style.top = o.clientY - l.top + 30 + "px", document.styleSheets[0].addRule(".mtip:before", "content:'';display:inline-block;border:10px solid transparent; border-left-color: " + e + ";-webkit-transform: rotate(-90deg);-moz-transform: rotate(-90deg);-o-transform: rotate(-90deg);-ms-transform: rotate(-90deg);-o-transform: rotate(-90deg);position:absolute;left:" + (a.width / 2 - 10) + "px;top:-20px")) : "right" == n ? (r.style.left = o.clientX - l.left + 20 + "px", r.style.top = o.clientY - l.top + "px", document.styleSheets[0].addRule(".mtip:before", "content:'';display:inline-block;border:10px solid transparent; border-left-color: " + e + ";-webkit-transform: rotate(180deg);-moz-transform: rotate(180deg);-o-transform: rotate(180deg);-ms-transform: rotate(180deg);-o-transform: rotate(180deg);position:absolute;left:-20px;top:" + (a.height / 2 - 10) + "px")) : (r.style.left = o.clientX - l.left - 15 - a.width + "px", r.style.top = o.clientY - l.top + "px", document.styleSheets[0].addRule(".mtip:before", "content:'';display:inline-block;border:10px solid transparent; border-left-color: " + e + ";-webkit-transform: rotate(360deg);-moz-transform: rotate(360deg);-o-transform: rotate(360deg);-ms-transform: rotate(360deg);-o-transform: rotate(360deg);position:absolute;left:" + a.width + "px;top:" + (a.height / 2 - 10) + "px")), console.log(i), setTimeout(function () { r.style.visibility = "visible" }, i) }; if ("hover" == r) { d.onmouseenter = function (t) { for (var e = document.getElementsByClassName("mtip") ; e[0];) e[0].parentNode.removeChild(e[0]); return t.target.appendChild(c), m(this, t, c), t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0, !1 }, d.onmousemove = function (t) { return m(this, t, c), t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0, !1 }, d.onmouseleave = function (t) { if ("undefined" != typeof c || null != c) { c.style.visibility = "hidden"; try { c.parentNode.classList.remove("mTipParent"), c.style.visibility = "hidden", c.remove() } catch (e) { c.parentNode && (c.parentNode.classList.remove("mTipParent"), c.style.visibility = "hidden", c.parentNode.removeChild(c)) } } return t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0, !1 }; for (var g in d.children) d.children[g].onmouseenter = function (t) { return t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0, !1 }, d.children[g].onmousemove = function (t) { return t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0, !1 } } else "click" == r && (d.onclick = function (t) { if (c.onclick = function (t) { t.stopPropagation() }, 0 == document.getElementsByClassName("mtip").length) t.target.appendChild(c), m(t.target, t, c, i), t.stopPropagation(); else try { ("undefined" != typeof c || null != c) && (t.target.contains(c) && c.parentNode == t.target ? (c.parentNode.classList.remove("mTipParent"), c.style.visibility = "hidden", c.remove()) : (c.parentNode.classList.remove("mTipParent"), c.style.visibility = "hidden", c.remove(), t.target.appendChild(c), m(t.target, t, c), t.stopPropagation())) } catch (e) { t.target.contains(c) && c.parentNode == t.target ? c.parentNode && (c.parentNode.classList.remove("mTipParent"), c.style.visibility = "hidden", c.parentNode.removeChild(c)) : (c.parentNode && (c.parentNode.classList.remove("mTipParent"), c.style.visibility = "hidden", c.parentNode.removeChild(c)), t.target.appendChild(c), m(t.target, t, c), t.stopPropagation()) } t.stopPropagation ? t.stopPropagation() : t.cancelBubble = !0 }) } };
